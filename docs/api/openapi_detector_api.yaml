openapi: 3.0.1
info:
  title: Detector API
  version: 0.1.0
paths:
  /api/v1/task/detector:
    post:
      parameters:
        - in: header
          name: detector-id
          schema:
            type: string
          required: true
          example: profanity.detector.v1-en
      requestBody:
        content:
          application/json:
            schema:
              properties:
                text:
                  type: string
                  title: Text
                parameters:
                    
                  # threshold is responsibility of the detector, if it supports and user provides then orchestrator will
                  # just pass it along
                  anyOf:
                    - additionalProperties:
                        anyOf:
                          - type: integer
                          - type: number
                          - type: string
                          - type: boolean
                          - items:
                              type: object
                            type: array
                          - type: object
                      type: object
                  title: Parameters
              additionalProperties: false
              type: object
              title: DetectorTaskRequestHttpRequest
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectorResponseList'
components:
  schemas:
    DetectorResponseList:
      properties:
        detections:
          items:
            properties:
              start:
                title: Start
                type: integer
                example: 0
              end:
                title: End
                type: integer
                example: 10
              text:
                title: Text
                type: string
                example: "my bad text"
              detection:
                title: Detection
                type: string
                example: "has_HAP"
              detection_type:
                title: Detection Type
                type: string
                example: "hap"
              score:
                title: Score
                type: number
                example: 0.5
            title: detector.data_model.DetectorResponse
            type: object
          title: Detectors
          type: array
      title: detector.data_model.DetectorResponseList
      type: object

